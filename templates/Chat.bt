//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: ChatBgColors.bt
//   Authors: SecreC.
//   Version: 1.0
//   Purpose: to edit chat icon background colors
//  Category: 
// File Mask: ChatBgColors.bt
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

typedef struct
{
	short paramIndex<name="Icon Param Index">;
	char Chat_Name_Tag[0x1e];
    char padding[0x10]<hidden=true>;
}nameIds<read=nameIdRead>;

string nameIdRead( nameIds &o )
{
	local string s;
	if (o.paramIndex == -1)
	{
		SPrintf(s, "Name File End");
	}
	else
	{
		SPrintf(s, "Param Index -> %03d; Name Tag -> %s", o.paramIndex, o.Chat_Name_Tag);	
	}
	return s;
}

typedef struct
{
	short unk0;
	short chatSPD_ID;
	float IconXOffset;
	float IconYOffset;
	float IconScale;
	float IconRotation;
	float PreviewIconXOffset;
	float PreviewIconYOffset;
	float PreviewIconScale;
	float PreviewIconRotate;
	int unk2[4];
}iconParams<read=iconParamRead>;

string iconParamRead( iconParams &o )
{
	local string s;
	SPrintf(s, "Spd ID -> %03d", o.chatSPD_ID);
	return s;
}

local int64 fileSize = FileSize();
local string filePath = GetFileName();
local string fileName = FileNameGetBase( filePath, false );

typedef struct( string fileName, int64 fileSize )
{
		switch ( fileName )
		{
			case "ChatBgColors":
				uint chatColor[FileSize() / 4]<format=hex>;
				break;
			
			case "ChatNameIds_En":
			case "ChatNameIds_Fr":
			case "ChatNameIds_It":
			case "ChatNameIds_De":
			case "ChatNameIds_Es":
				nameIds data[FileSize() / 48]<optimize=false>;
				break;
			
			case "ChatIconParams":
				iconParams data[FileSize() / 52]<optimize=false>;
				break;
			
			default:
			byte Field00[fileSize];
			break;
		}
}ChatStructs;

ChatStructs data ( fileName, fileSize );