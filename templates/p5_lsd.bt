//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: sg3ds_col_bin.bt
//   Authors: TGE
//   Version: 1.0
//   Purpose: Parse Persona 5 LSD files
//  Category: Persona 5
// File Mask: *.lsd
//  ID Bytes: 
//   History: 
//------------------------------------------------

//---------------------------------------------
// Primitive types
//---------------------------------------------
typedef char bool;
typedef char s8;
typedef uchar u8;
typedef int16 s16;
typedef uint16 u16;
typedef int16 s16;
typedef int32 s32;
typedef uint32 u32;
typedef int64 s64;
typedef uint64 u64;
typedef float f32;
typedef double f64;

//---------------------------------------------
// Random color
//---------------------------------------------
local uint __RandomSeed = 0xDEADBABE;
local uint __RandomBit = 0;
local uint __RandomCount = 0;
 
uint MyRandom( uint to )
{
    ++__RandomCount;
    __RandomBit  = ( (__RandomSeed >> 0 ) ^ ( __RandomSeed >> 2 ) ^ ( __RandomSeed >> 3 ) ^ ( __RandomSeed >> 5 ) ) & 1;
    __RandomSeed = ( ( ( ( __RandomBit << 15 ) | ( __RandomSeed >> 1 ) ) + ( 0xBABE / __RandomCount ) ) % to );

    while( __RandomSeed < 0 )
        __RandomSeed += to;

    return __RandomSeed;
}

uint RandomColor()
{
    return MyRandom( 0xFFFFFFFF );
}

void SetRandomBackColor()
{
    SetBackColor( RandomColor() );
}

//---------------------------------------------
// File parsing
//---------------------------------------------

typedef struct
{
    SetRandomBackColor();

    u32 Field00;    // always 0
    u32 Magic;      // LSD\0
    u32 ListCount;

    Assert( Field00 == 0, "Field00 != 0" );
    Assert( Magic == 0x4C534400, "Invalid magic value" );

    u32 ListOffsets[ ListCount ];
    local u32 i;
    for ( i = 0; i < ListCount; ++i )
    {
        FSeek( ListOffsets[ i ] );
        struct LsdList List;
    }

} LsdFile;

typedef struct
{
    SetRandomBackColor();

    u32 EntryCount;     // 
    u32 Field04;        
    u32 Size;           // complete size of the list in bytes
    u32 Field0C;        // -1 / 0xFFFFFFFF
    u32 Field10;        // 0
    u32 Field14;        // 0

    Printf( "Field04: %08X\n", Field04 );
    Assert( Field0C == 0xFFFFFFFF, "Field0C != 0xFFFFFFFF" );
    Assert( Field10 == 0, "Field10 != 0" );
    Assert( Field14 == 0, "Field14 != 0" );

    struct LsdListEntry Entries[ EntryCount ];
    
} LsdList <optimize=false>;

typedef struct
{
    SetRandomBackColor();

    u8 Field00[4];
    f32 Field04;

} LsdListEntry <optimize=false>;

BigEndian();
LsdFile File;